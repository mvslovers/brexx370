/* BREXX *//* FSS SCRIPT TO QUERY THE LOCATE DATABASE *//* SIGNAL ON ERROR NAME SYS_ERR */LOCATE_DATA="LOCATE.DATA"CALL IMPORT FSSAPIADDRESS FSSCALL FSSINIT"RESET"OFFS=DCL('$DEFINE','LOC')OFFS=DCL('HLQ',1,20,'CHAR')OFFS=DCL('VOL',,6,'CHAR')OFFS=DCL('DSET',,44,'CHAR')OFFS=DCL('DSO',,2,'CHAR')OFFS=DCL('LRECL',,5,'CHAR')OFFS=DCL('MEMBER',,8,'CHAR')SRCH=''WHR='B'DE=EXISTS(LOCATE_DATA)IF DE=0 THEN CALL NO_DATA_SCREEN   ELSE CALL MAIN_SCREENDO FOREVER   RKEY=FSSREFRESH()   IF RKEY=#PFK03 THEN LEAVE   IF RKEY=#ENTER THEN      DO         SRCH=STRIP(FSSFGET('ZSEARCH'))         IF LENGTH(SRCH)<3 THEN            DO               CALL FSSZERRSM 'Refine your search'               ITERATE            END         WHR=FSSFGET('ZWHERE')         CALL RUN_SEARCH(SRCH)         CALL FORMAT_RESULTS      ENDENDEXIT NO_DATA_SCREEN:ADDRESS FSS"RESET"CALL FSSTITLE '*** ERROR ***',#RED+#PROTNOT_LOADED='Unable to open '||LOCATE_DATA||'('||DS||')'CALL FSSTEXT NOT_LOADED,8,1,,#YELLOW+#PROTCALL FSSCURSOR "ZCMD"RETURN MAIN_SCREEN:    CALL FSSTITLE 'DATASET/MEMBER LOCATE TOOL',#WHITE+#PROT   CALL FSSTEXT 'Search for:',5,3,,#GREEN+#PROT   CALL FSSTEXT 'Look for (D)atasets, (M)embers or (B)oth >',8,3,,#GREEN+#PROT   CALL FSSFIELD 'ZSEARCH',5,18,44,#HI+#YELLOW+#USCORE   CALL FSSFIELD 'ZWHERE',8,46,1,#HI+#YELLOW+#USCORE   CALL FSSFSET 'ZWHERE','B'   CALL FSSTEXT 'PFK03-EXIT',23,1,,#YELLOW+#PROT   CALL FSSCURSOR 'ZSEARCH'   RETURN FORMAT_RESULTS:    /* CREATE THE BUFFER FOR FMTLIST */   DROP BUFFER.   BUFFER.=''   BUFFER.0=0   SRCH=STRIP(SRCH)   /* TRIM OFF ANY SPACES */    /* LOCLIST _ONLY_ CONTAINS MATCHING RECORDS */   /* HOWEVER IT CONTAINS MATCHES FOR BOTH DATASETS AND MEMBERS */   /* THEY WILL NEED TO BE DIFFERENTIATED IF ZWHERE IS _NOT_ B */    DO I=1 TO LOCLIST.0      D_RESULT=''      /* SPLIT THE RECORD */      CALL SPLITRECORD 'LOC',LOCLIST.I      M_DSET=STRIP(DSET)      M_MEMBER=STRIP(MEMBER)      DPOS=POS(SRCH,M_DSET)    /* POSITION IN DATASET */      MPOS=POS(SRCH,M_MEMBER)  /* POSITION IN MEMBER  */      /* IF EITHER OF THE ABOVE IS NON-ZERO IT'S PRESENT */       TEMP=COPIES(' ',80)   /* HOLDING FOR OUTPUT TO BUFFER */      /* THE DATASET WILL *ALWAYS* BE NEEDED */      /* BUT WILL ONLY BE DISPLAYED WHEN MEMBER DOESNT MATCH */      /* AND WHR IS D OR B */      DM=M_DSET||'('||MEMBER||')'     TEMP=OVERLAY(DM,TEMP,1)      IF WHR='M' & MPOS=0 THEN        ITERATE      IF WHR='D' & DPOS=0 THEN        ITERATE      TEMP=OVERLAY(STRIP(DSO)||'/'||LRECL,TEMP,62)     BUFL=BUFFER.0+1     BUFFER.BUFL=TEMP     BUFFER.0=BUFL   END   IF BUFFER.0=0 THEN      DO        /* NO RESULTS, DON'T SHOW A LIST, JUST ERRMSG */        CALL FSSZERRSM 'No results found.'        CALL FSSZERRLM 'No results were found, try expanding your search.'        RETURN      end   TEMP=COPIES(' ',80)   TEMP=OVERLAY('Dataset(MEMBER)',TEMP,1)   HDR=OVERLAY('DSO/LRECL',TEMP,62)   CALL FMTLIST,,HDR,COPIES('-',80),'LOCATE'   CALL MAIN_SCREENRETURN RUN_SEARCH:   PARSE ARG SEARCH_PARM   DROP LOCLIST.   LOCLIST.=''   LOCLIST.0=0   ADDRESS TSO   "ALLOC F(LOCDAT) DSN("LOCATE_DATA") SHR"   IF RC<>0 THEN ABEND(12)   "EXECIO * DISKR LOCDAT (STEM LOCLIST. KEEP "SEARCH_PARM   "FREE F(LOCDAT)"   RETURN SYS_ERR:   SAY 'A system error occurred.  Most likely you used too broad a search'   exit